<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>抓包 on Hao Sun</title>
    <link>https://sunhao1256.github.io/tags/%E6%8A%93%E5%8C%85/</link>
    <description>Recent content in 抓包 on Hao Sun</description>
    <image>
      <url>https://sunhao1256.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://sunhao1256.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 12 Jul 2022 10:41:41 +0800</lastBuildDate><atom:link href="https://sunhao1256.github.io/tags/%E6%8A%93%E5%8C%85/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Wireshark</title>
      <link>https://sunhao1256.github.io/posts/wireshark/</link>
      <pubDate>Tue, 12 Jul 2022 10:41:41 +0800</pubDate>
      
      <guid>https://sunhao1256.github.io/posts/wireshark/</guid>
      <description>WireShark 三次握手四次挥手 TCP 首部包含以下内容，请留意其中的控制位，在三次握手和四次挥手过程中会频繁出现：
 端口号 (Source Port and Destination Port)：每个 TCP 报文段都包含源端和目的端的端口号，用于寻找发送端和接收端应用进程。这两个值加上 IP 首部中的源端 IP 地址和目的端 IP 地址就可以确定一个唯一的 TCP 连接。 序号 (Sequence Number)：这个字段的主要作用是用于将失序的数据重新排列。TCP 会隐式地对字节流中的每个字节进行编号，而 TCP 报文段的序号被设置为其数据部分的第一个字节的编号。序号是 32 bit 的无符号数，取值范围是0到 232 - 1。 确认序号 (Acknowledgment Number)：接收方在接受到数据后，会回复确认报文，其中包含确认序号，作用就是告诉发送方自己接收到了哪些数据，下一次数据从哪里开始发，因此，确认序号应当是上次已成功收到数据字节序号加 1。只有 ACK 标志为 1 时确认序号字段才有效。 首部长度 (Header Length)：首部中的选项部分的长度是可变的，因此首部的长度也是可变的，所以需要这个字段来明确表示首部的长度，这个字段占 4 bit，4 位的二进制数最大可以表示 15，而首部长度是以 4 个字节为一个单位的，因此首部最大长度是 15 * 4 = 60 字节。 保留字段 (Reserved)：占 6 位，未来可能有具体用途，目前默认值为0. 控制位 (Control Bits)：在三次握手和四次挥手中会经常看到 SYN、ACK 和 FIN 的身影，一共有 6 个标志位，它们表示的意义如下：  URG (Urgent Bit)：值为 1 时，紧急指针生效 ACK (Acknowledgment Bit)：值为 1 时，确认序号生效 PSH (Push Bit)：接收方应尽快将这个报文段交给应用层 RST (Reset Bit)：发送端遇到问题，想要重建连接 SYN (Synchronize Bit)：同步序号，用于发起一个连接 FIN (Finish Bit)：发送端要求关闭连接   窗口大小 (Window)： TCP的流量控制由连接的每一端通过声明的窗口大小来提供。窗口大小为字节数，起始于确认序号字段指明的值，这个值是接收端正期望接收的字节。窗口大小是一个 16 bit 字段，单位是字节， 因而窗口大小最大为 65535 字节。 检验和 (Checksum)：功能类似于数字签名，用于验证数据完整性，也就是确保数据未被修改。检验和覆盖了整个 TCP 报文段，包括 TCP 首部和 TCP 数据，发送端根据特定算法对整个报文段计算出一个检验和，接收端会进行计算并验证。 紧急指针 (Urgent Pointer)：当 URG 控制位值为 1 时，此字段生效，紧急指针是一个正的偏移量，和序号字段中的值相加表示紧急数据最后一个字节的序号。 TCP 的紧急方式是发送端向另一端发送紧急数据的一种方式。 选项 (Options)：这一部分是可选字段，也就是非必须字段，最常见的可选字段是“最长报文大小 (MSS，Maximum Segment Size)”。 有效数据部分 (Data)：这部分也不是必须的，比如在建立和关闭 TCP 连接的阶段，双方交换的报文段就只包含 TCP 首部。  </description>
    </item>
    
  </channel>
</rss>
